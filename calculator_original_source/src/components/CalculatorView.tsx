import React, { useState, useCallback } from 'react';
import { RoomData, SavedMaterial, MaterialResult, TotalCalculations } from '../../types/calculator';
import { RoomEditor } from './RoomEditor';
import { ResultsPage } from './ResultsPage';
import { Icon, IconSun, IconMoon, IconSave, IconFolderOpen, IconLibrary } from './common';

interface CalculatorViewProps {
  rooms: RoomData[];
  setRooms: (rooms: RoomData[]) => void;
  handleInputFocus: (e: React.FocusEvent<HTMLElement>) => void;
  handleThemeChange: () => void;
  themeIcon: () => string;
  onSaveEstimate: () => void;
  onLoadEstimate: () => void;
  onOpenLibrary: () => void;
  materials: SavedMaterial[];
  materialResults?: Record<string, MaterialResult | null>;
  totalMetrics?: TotalCalculations;
  totalCost?: number;
  onExport?: (format: string) => void;
  readOnly?: boolean;
  showHeader?: boolean;
  showNavigation?: boolean;
  showExportControls?: boolean;
}

export const CalculatorView: React.FC<CalculatorViewProps> = ({
  rooms,
  setRooms,
  handleInputFocus,
  handleThemeChange,
  themeIcon,
  onSaveEstimate,
  onLoadEstimate,
  onOpenLibrary,
  materials,
  materialResults = {},
  totalMetrics,
  totalCost = 0,
  onExport,
  readOnly = false,
  showHeader = true,
  showNavigation = true,
  showExportControls = true
}) => {
  const [currentView, setCurrentView] = useState<'rooms' | 'results'>('rooms');

  const handleViewChange = useCallback((view: 'rooms' | 'results') => {
    setCurrentView(view);
  }, []);

  return (
    <div className="calculator-view">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      {showHeader && (
        <header className="calc-header">
          <div className="calc-title">
            <h1>–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</h1>
            <p>–†–∞—Å—á–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞</p>
          </div>
          
          <div className="calc-controls">
            <button 
              className="theme-toggle"
              onClick={handleThemeChange}
              title="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É"
            >
              {themeIcon() === 'üåô' ? <IconMoon /> : <IconSun />}
            </button>
            
            <button 
              className="btn-secondary"
              onClick={onOpenLibrary}
              title="–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"
            >
              <IconLibrary />
              –ú–∞—Ç–µ—Ä–∏–∞–ª—ã
            </button>
            
            <button 
              className="btn-secondary"
              onClick={onLoadEstimate}
              title="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–º–µ—Ç—É"
            >
              <IconFolderOpen />
              –ó–∞–≥—Ä—É–∑–∏—Ç—å
            </button>
            
            <button 
              className="btn-primary"
              onClick={onSaveEstimate}
              title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–º–µ—Ç—É"
            >
              <IconSave />
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </button>
          </div>
        </header>
      )}

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      {showNavigation && (
        <nav className="calc-nav">
          <button 
            className={`nav-btn ${currentView === 'rooms' ? 'active' : ''}`}
            onClick={() => handleViewChange('rooms')}
          >
            –ö–æ–º–Ω–∞—Ç—ã ({rooms.length})
          </button>
          <button 
            className={`nav-btn ${currentView === 'results' ? 'active' : ''}`}
            onClick={() => handleViewChange('results')}
          >
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
          </button>
        </nav>
      )}

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <main className="calc-main">
        {currentView === 'rooms' ? (
          <RoomEditor 
            rooms={rooms}
            setRooms={setRooms}
            onInputFocus={handleInputFocus}
            readOnly={readOnly}
          />
        ) : (
          <ResultsPage 
            rooms={rooms}
            materials={materials}
            materialResults={materialResults}
            totalMetrics={totalMetrics}
            totalCost={totalCost}
            onExport={onExport}
            showExportControls={showExportControls}
          />
        )}
      </main>
    </div>
  );
};

export { CalculatorView };
