import React from 'react';
import { Project, FinanceEntry, WorkStage } from '../../types';
import { ListItem } from '../ui/ListItem';
import { IconTrendingUp, IconCheckCircle, IconImage, IconShare, IconChevronRight } from '../common/Icon';

interface ClientReportScreenProps {
  project: Project;
  estimates: any[];
  financeEntries: FinanceEntry[];
  workStages: WorkStage[];
  formatCurrency: (amount: number) => string;
  onBack: () => void;
}

export const ClientReportScreen: React.FC<ClientReportScreenProps> = ({
  project,
  estimates,
  financeEntries,
  workStages,
  formatCurrency,
  onBack
}) => {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
  const today = new Date().toLocaleDateString('ru-RU', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–æ–µ–∫—Ç—É
  const projectEstimates = estimates.filter(e => e.projectId === project.id);
  const projectFinanceEntries = financeEntries.filter(f => f.projectId === project.id);
  const projectWorkStages = workStages.filter(w => w.projectId === project.id);

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞)
  const totalEstimateAmount = projectEstimates.reduce((sum, estimate) => {
    const estimateTotal = estimate.items?.reduce((itemSum: number, item: any) =>
      itemSum + (item.quantity * item.price), 0) || 0;
    return sum + estimateTotal;
  }, 0);

  const totalPaidByClient = projectFinanceEntries
    .filter(entry => entry.type === 'income')
    .reduce((sum, entry) => sum + entry.amount, 0);

  const remainingToPay = totalEstimateAmount - totalPaidByClient;

  // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç
  const completedWorkStages = projectWorkStages
    .filter(stage => stage.status === 'completed')
    .sort((a, b) => new Date(b.completionDate || 0).getTime() - new Date(a.completionDate || 0).getTime());

  // –ò–º–∏—Ç–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–æ—Ç—á–µ—Ç (–≤ –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥—É—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ)
  const mockPhotos = [
    { id: 1, title: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç', date: '15.01.2024' },
    { id: 2, title: '–§—É–Ω–¥–∞–º–µ–Ω—Ç', date: '20.01.2024' },
    { id: 3, title: '–°—Ç–µ–Ω—ã', date: '25.01.2024' },
    { id: 4, title: '–ö—Ä—ã—à–∞', date: '30.01.2024' },
    { id: 5, title: '–û—Ç–¥–µ–ª–∫–∞', date: '05.02.2024' }
  ];

  const handleShare = () => {
    alert('–§—É–Ω–∫—Ü–∏—è "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏! üì±');
  };

  return (
    <>
      <header className="projects-list-header">
        <button onClick={onBack} className="back-btn">
          <IconChevronRight style={{ transform: 'rotate(180deg)' }} />
          <span>–ù–∞–∑–∞–¥</span>
        </button>
        <h1>–û—Ç—á–µ—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞</h1>
      </header>

      <main className="project-detail-main" style={{ display: 'flex', flexDirection: 'column', gap: 'var(--spacing-m)' }}>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞ */}
        <div className="card">
          <h2 style={{ 
            marginBottom: 'var(--spacing-s)', 
            color: 'var(--color-text-primary)',
            fontSize: 'var(--font-size-l)',
            textAlign: 'center'
          }}>
            –û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É "{project.name}"
          </h2>
          <p style={{ 
            textAlign: 'center', 
            color: 'var(--color-text-secondary)',
            fontSize: 'var(--font-size-m)'
          }}>
            –æ—Ç {today}
          </p>
        </div>

        {/* –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞) */}
        <div className="card">
          <h3 style={{ marginBottom: 'var(--spacing-m)', color: 'var(--color-text-primary)' }}>
            <IconTrendingUp style={{ marginRight: 'var(--spacing-s)' }} />
            –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
          </h3>

          <div style={{ display: 'grid', gap: 'var(--spacing-m)', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))' }}>
            <div style={{
              backgroundColor: 'var(--color-surface-2)',
              borderRadius: 'var(--border-radius-m)',
              padding: 'var(--spacing-l)',
              textAlign: 'center',
              border: '1px solid var(--color-separator)'
            }}>
              <div style={{
                fontSize: 'var(--font-size-xxl)',
                fontWeight: '700',
                color: 'var(--color-text-primary)',
                marginBottom: 'var(--spacing-s)'
              }}>
                {formatCurrency(totalEstimateAmount)}
              </div>
              <div style={{
                fontSize: 'var(--font-size-s)',
                color: 'var(--color-text-secondary)',
                fontWeight: '500'
              }}>
                –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –ø–æ —Å–º–µ—Ç–µ
              </div>
            </div>

            <div style={{
              backgroundColor: 'var(--color-surface-2)',
              borderRadius: 'var(--border-radius-m)',
              padding: 'var(--spacing-l)',
              textAlign: 'center',
              border: '1px solid var(--color-separator)'
            }}>
              <div style={{
                fontSize: 'var(--font-size-xxl)',
                fontWeight: '700',
                color: 'var(--color-primary)',
                marginBottom: 'var(--spacing-s)'
              }}>
                {formatCurrency(totalPaidByClient)}
              </div>
              <div style={{
                fontSize: 'var(--font-size-s)',
                color: 'var(--color-text-secondary)',
                fontWeight: '500'
              }}>
                –û–ø–ª–∞—á–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–º
              </div>
            </div>

            <div style={{
              backgroundColor: 'var(--color-surface-2)',
              borderRadius: 'var(--border-radius-m)',
              padding: 'var(--spacing-l)',
              textAlign: 'center',
              border: '1px solid var(--color-separator)'
            }}>
              <div style={{
                fontSize: 'var(--font-size-xxl)',
                fontWeight: '700',
                color: remainingToPay > 0 ? 'var(--color-danger)' : 'var(--color-success)',
                marginBottom: 'var(--spacing-s)'
              }}>
                {formatCurrency(Math.abs(remainingToPay))}
                {remainingToPay > 0 ? ' (–∫ –æ–ø–ª–∞—Ç–µ)' : ' (–æ–ø–ª–∞—á–µ–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é)'}
              </div>
              <div style={{
                fontSize: 'var(--font-size-s)',
                color: 'var(--color-text-secondary)',
                fontWeight: '500'
              }}>
                –û—Å—Ç–∞—Ç–æ–∫ –∫ –æ–ø–ª–∞—Ç–µ
              </div>
            </div>
          </div>
        </div>

        {/* –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã */}
        <div className="card">
          <h3 style={{ marginBottom: 'var(--spacing-m)', color: 'var(--color-text-primary)' }}>
            <IconCheckCircle style={{ marginRight: 'var(--spacing-s)' }} />
            –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
          </h3>

          {completedWorkStages.length > 0 ? (
            <div style={{ display: 'flex', flexDirection: 'column', gap: 'var(--spacing-s)' }}>
              {completedWorkStages.map((stage) => (
                <ListItem
                  key={stage.id}
                  icon={<IconCheckCircle />}
                  title={stage.name}
                  subtitle={stage.completionDate ? 
                    `–ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${new Date(stage.completionDate).toLocaleDateString('ru-RU')}` : 
                    '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'
                  }
                  amountText={stage.budget ? formatCurrency(stage.budget) : undefined}
                  amountColor="var(--color-success)"
                />
              ))}
            </div>
          ) : (
            <p style={{ color: 'var(--color-text-secondary)', textAlign: 'center', padding: 'var(--spacing-l)' }}>
              –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã
            </p>
          )}
        </div>

        {/* –§–æ—Ç–æ–æ—Ç—á–µ—Ç */}
        <div className="card">
          <h3 style={{ marginBottom: 'var(--spacing-m)', color: 'var(--color-text-primary)' }}>
            <IconImage style={{ marginRight: 'var(--spacing-s)' }} />
            –§–æ—Ç–æ–æ—Ç—á–µ—Ç
          </h3>

          <div style={{ 
            display: 'grid', 
            gap: 'var(--spacing-m)', 
            gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
            marginBottom: 'var(--spacing-m)'
          }}>
            {mockPhotos.map((photo) => (
              <div 
                key={photo.id} 
                style={{
                  backgroundColor: 'var(--color-surface-2)',
                  borderRadius: 'var(--border-radius-s)',
                  padding: 'var(--spacing-m)',
                  textAlign: 'center',
                  border: '1px solid var(--color-separator)'
                }}
              >
                <div style={{
                  width: '100%',
                  height: '100px',
                  backgroundColor: 'var(--color-surface-1)',
                  borderRadius: 'var(--border-radius-s)',
                  marginBottom: 'var(--spacing-s)',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  color: 'var(--color-text-secondary)',
                  fontSize: 'var(--font-size-s)'
                }}>
                  üì∑
                </div>
                <div style={{ fontSize: 'var(--font-size-s)', color: 'var(--color-text-primary)' }}>
                  {photo.title}
                </div>
                <div style={{ fontSize: 'var(--font-size-s)', color: 'var(--color-text-secondary)' }}>
                  {photo.date}
                </div>
              </div>
            ))}
          </div>

          <p style={{ 
            color: 'var(--color-text-secondary)', 
            textAlign: 'center', 
            fontSize: 'var(--font-size-s)',
            fontStyle: 'italic'
          }}>
            –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø—Ä–æ–µ–∫—Ç–∞
          </p>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" */}
        <div className="card" style={{ textAlign: 'center' }}>
          <button 
            onClick={handleShare}
            style={{
              backgroundColor: 'var(--color-primary)',
              color: 'white',
              border: 'none',
              borderRadius: 'var(--border-radius-s)',
              padding: 'var(--spacing-m) var(--spacing-xl)',
              fontSize: 'var(--font-size-m)',
              cursor: 'pointer',
              display: 'inline-flex',
              alignItems: 'center',
              gap: 'var(--spacing-s)'
            }}
          >
            <IconShare />
            –ü–æ–¥–µ–ª–∏—Ç—å—Å—è / –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </div>
      </main>
    </>
  );
};
